## Plan
- [x] basic chat example
- [x] add db persistence of messages
- [x] check access and existence in chats and messages requests
- [x] create private chat and send messages test
- [x] tests with not enough access for private chat
- [x] tests with not enough access for chat with self
- [x] add config
- [x] research auth methods
- [x] add sessions table to track user tokens
- [ ] rewrite to use fields directly in requests
- [ ] limit session count on login, e.g. add sessions limit and terminate oldest session
- [ ] research how to cache user tokens
- [ ] add auth, connect to websocket with token
- [ ] mvp: on connect download all messages, db-only api
- [ ] research android and web frameworks in rust
- [ ] api layer for user access, add input validation
- [ ] create active websockets channels for broadcast, sync with db
- [ ] files feature
- [ ] groups feature

- [ ] atomic private chat creation check - add constraint of existence?
- [ ] presence indicator + heartbeat
- [ ] add external queue to scale active sessions

## Features
### V1.0
* invite-only registration
* group chats up to 20 people
* message types:
    * text (limit 4096 chars)

### V2.0
* e2ee private chats
* message types:
    * uncompressed files
    * compressed media, reencoding must happen on client for e2ee

### V3.0
* voice chats


### EXTRA
* cleanup resources periodically when no references are found
* user message creation rate limiter
* user resource upload rate limiter
* user chats count limit

